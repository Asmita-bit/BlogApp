name: CI - Build, Lint, and Push Images

on:
  pull_request:
    branches: ['dev']
  push:
    branches: ['dev']

env:
  REGISTRY: docker.io
  FRONTEND_IMAGE_NAME: asmita071/frontend
  BACKEND1_IMAGE_NAME: asmita071/backend1
  BACKEND2_IMAGE_NAME: asmita071/backend2

jobs:
  commitlint:
    name: Conventional Commit Lint
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && (github.head_ref == 'feature' || startsWith(github.head_ref, 'feature/')) && github.base_ref == 'dev'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install Commitlint
        run: npm install -D @commitlint/cli @commitlint/config-conventional
      - name: Add Commitlint Config
        run: |
          echo "module.exports = { extends: ['@commitlint/config-conventional'] };" > commitlint.config.js
      - name: Print versions
        run: |
          git --version
          node --version
          npm --version
          npx commitlint --version
      - name: Validate PR commits with commitlint
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

  # --------------------- Lint Jobs ---------------------
  lint_backend1:
    name: Lint Backend1
    runs-on: [self-hosted, backend]
    needs: commitlint
    if: github.event_name == 'pull_request' && (github.head_ref == 'feature' || startsWith(github.head_ref, 'feature/')) && github.base_ref == 'dev'
    steps:
      - uses: actions/checkout@v3
      - name: Cache node_modules
        id: cache
        uses: actions/cache@v4
        with:
          path: ./code/backend1/node_modules
          key: backend1-cache-${{ hashFiles('code/backend1/yarn.lock') }}
      - name: Install Dependencies
        working-directory: ./code/backend1
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Run Linter
        working-directory: ./code/backend1
        run: yarn lint

  lint_backend2:
    name: Lint Backend2
    runs-on: [self-hosted, backend]
    needs: commitlint
    if: github.event_name == 'pull_request' && (github.head_ref == 'feature' || startsWith(github.head_ref, 'feature/')) && github.base_ref == 'dev'
    steps:
      - uses: actions/checkout@v3
      - name: Cache node_modules
        id: cache
        uses: actions/cache@v4
        with:
          path: ./code/backend2/node_modules
          key: backend2-cache-${{ hashFiles('code/backend2/yarn.lock') }}
      - name: Install Dependencies
        working-directory: ./code/backend2
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Run Linter
        working-directory: ./code/backend2
        run: yarn lint

  lint_frontend:
    name: Lint Frontend
    runs-on: [self-hosted, frontend]
    needs: commitlint
    if: github.event_name == 'pull_request' && (github.head_ref == 'feature' || startsWith(github.head_ref, 'feature/')) && github.base_ref == 'dev'
    steps:
      - uses: actions/checkout@v3
      - name: Cache node_modules
        id: cache
        uses: actions/cache@v4
        with:
          path: ./code/frontend/node_modules
          key: frontend-cache-${{ hashFiles('code/frontend/yarn.lock') }}
      - name: Install Dependencies
        working-directory: ./code/frontend
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Run Linter
        working-directory: ./code/frontend
        run: yarn lint

  # --------------------- Docker Build & Push Jobs ---------------------
  build_backend1:
    name: Build & Push Backend1 Image
    runs-on: [self-hosted, backend]
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    environment: development
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build & Push Backend1 Image
        uses: docker/build-push-action@v5
        with:
          context: ./code/backend1
          file: ./code/backend1/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.BACKEND1_IMAGE_NAME }}:${{ github.ref_name }}
            ${{ env.REGISTRY }}/${{ env.BACKEND1_IMAGE_NAME }}:latest

  build_backend2:
    name: Build & Push Backend2 Image
    runs-on: [self-hosted, backend]
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    environment: development
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build & Push Backend2 Image
        uses: docker/build-push-action@v5
        with:
          context: ./code/backend2
          file: ./code/backend2/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.BACKEND2_IMAGE_NAME }}:${{ github.ref_name }}
            ${{ env.REGISTRY }}/${{ env.BACKEND2_IMAGE_NAME }}:latest

  build_frontend:
    name: Build & Push Frontend Image
    runs-on: [self-hosted, frontend]
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    environment: development
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build & Push Frontend Image
        uses: docker/build-push-action@v5
        with:
          context: ./code/frontend
          file: ./code/frontend/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:${{ github.ref_name }}
            ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:latest
